{"version":3,"sources":["proto/pkg/espressopb/espresso_pb_service.js","components/AppHeader.tsx","createUnaryGrpcThunk.ts","redux/configurationSlice.ts","redux/uiSlice.ts","components/ConfigurationForm.tsx","components/ConfigurationDialog.tsx","components/Title.tsx","components/MetricCard.tsx","redux/boilerTemperatureSlice.ts","components/TemperatureCard.tsx","components/TemperatureChart.tsx","redux/selectors.ts","pages/DashboardPage.tsx","theme.ts","App.tsx","components/ThemeWrapper.tsx","redux/index.ts","serviceWorker.ts","index.tsx","proto/pkg/espressopb/espresso_pb.js"],"names":["pkg_espressopb_espresso_pb","require","grpc","Espresso","serviceName","EspressoClient","serviceHost","options","this","BoilerTemperature","methodName","service","requestStream","responseStream","requestType","TemperatureStreamRequest","responseType","TemperatureStreamResponse","GetConfiguration","GetConfigurationRequest","Configuration","SetConfiguration","exports","prototype","boilerTemperature","requestMessage","metadata","listeners","data","end","status","client","invoke","request","host","transport","debug","onMessage","responseMessage","forEach","handler","onEnd","statusMessage","trailers","code","details","on","type","push","cancel","close","getConfiguration","callback","arguments","length","unary","response","Code","OK","err","Error","message","setConfiguration","useStyles","makeStyles","theme","toolbar","paddingRight","spacing","menuButton","marginRight","title","flexGrow","AppHeader","classes","AppBar","position","Toolbar","className","IconButton","edge","color","fontSize","Typography","component","variant","noWrap","href","target","createUnaryGrpcThunk","method","createAsyncThunk","a","Promise","resolve","reject","toast","error","resp","clone","configurationSlice","createSlice","name","initialState","isFetching","reducers","extraReducers","builder","addCase","pending","state","rejected","fulfilled","action","value","payload","getTemperature","setAt","getSetAt","toDate","configuration","targetTemp","p","getP","i","getI","d","getD","console","warn","success","selectConfiguration","uiSlice","configureDialogVisibility","setConfigureDialogVisibility","actions","NumberField","props","TextField","margin","fullWidth","validationSchema","Yup","shape","min","max","required","ConfigurationForm","useDispatch","useSelector","initialValues","enableReinitialize","onSubmit","values","setSubmitting","req","setTemperature","setP","setI","setD","id","Grid","container","item","xs","label","InputProps","endAdornment","InputAdornment","info","marginLeft","ConfigurationDialog","handleClose","Dialog","open","onClose","DialogTitle","size","DialogContent","DialogActions","Button","onClick","form","Title","children","gutterBottom","severityColorMap","normal","warning","context","flex","MetricCard","unitLabel","asOf","severity","Box","format","espressoClient","stream","undefined","history","boilerTemperatureSlice","startBoilerTemperatureStream","receiveBoilerTemperatureStreamMsg","msg","getDataCase","DataCase","HISTORY","getHistory","getSamplesList","reduce","acc","curSample","observedAt","getObservedAt","getValue","filter","s","SAMPLE","sample","getSample","slice","endBoilerTemperatureStream","selectCurTemp","selectTempHistory","dateFormat","temperatureContext","setTargetTempButton","textAlign","TemperatureCard","curTemp","toFixed","TemperatureChart","useTheme","map","time","temp","ResponsiveContainer","LineChart","top","right","bottom","left","XAxis","dataKey","stroke","palette","text","secondary","YAxis","domain","Label","angle","style","textAnchor","fill","primary","Line","isAnimationActive","main","dot","Tooltip","ReferenceLine","y","strokeDasharray","ifOverflow","showConfigDialog","ui","paper","padding","display","overflow","flexDirection","tallPaper","height","showSetTemperatureModal","useEffect","e","useState","metricsRefreshedAt","setMetricsRefreshedAt","cpuUtilization","setCpuUtilization","memUtilization","setMemUtilization","cpuTemperature","setCpuTemperature","gpuTemperature","setGpuTemperature","refreshMetrics","fetch","metricsResp","metricsRaw","metricsMap","parsePromText","cur","Date","parseFloat","espresso_raspi_cpu_utilization_ratio","metrics","espresso_raspi_mem_utilization_ratio","espresso_raspi_cpu_temperature","espresso_raspi_gpu_temperature","interval","setInterval","clearInterval","getRaspiTemperatureSeverity","raspiTemperature","md","lg","Paper","getThemedToastClass","backgroundColor","background","root","appBarSpacer","mixins","content","paddingTop","paddingBottom","Dashboard","CssBaseline","Container","maxWidth","DashboardPage","toastClassName","ThemeWrapper","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","default","ThemeProvider","store","configureStore","reducer","boilerTemperatureReducer","configurationReducer","middleware","getDefaultMiddleware","thunk","immutableCheck","serializableCheck","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","jspb","goog","global","Function","google_protobuf_timestamp_pb","object","extend","proto","exportSymbol","espressopb","TemperatureSample","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","TemperatureHistory","repeatedFields_","oneofGroups_","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","f","obj","getFloatingPointFieldWithDefault","Timestamp","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readFloat","setValue","readMessage","setObservedAt","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","writeFloat","writeMessage","setProto3FloatField","getWrapperField","setWrapperField","clearObservedAt","hasObservedAt","getField","samplesList","toObjectList","addSamples","writeRepeatedMessage","getRepeatedWrapperField","setSamplesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSamplesList","DATA_NOT_SET","computeOneofCase","setHistory","setSample","setOneofWrapperField","clearHistory","hasHistory","clearSample","hasSample","temperature","setSetAt","clearSetAt","hasSetAt"],"mappings":"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","file":"static/js/main.3b29a081.chunk.js","sourcesContent":["/* eslint-disable */\n// package: espressopb\n// file: pkg/espressopb/espresso.proto\n\nvar pkg_espressopb_espresso_pb = require(\"../../pkg/espressopb/espresso_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Espresso = (function () {\n  function Espresso() {}\n  Espresso.serviceName = \"espressopb.Espresso\";\n  return Espresso;\n}());\n\nEspresso.BoilerTemperature = {\n  methodName: \"BoilerTemperature\",\n  service: Espresso,\n  requestStream: false,\n  responseStream: true,\n  requestType: pkg_espressopb_espresso_pb.TemperatureStreamRequest,\n  responseType: pkg_espressopb_espresso_pb.TemperatureStreamResponse\n};\n\nEspresso.GetConfiguration = {\n  methodName: \"GetConfiguration\",\n  service: Espresso,\n  requestStream: false,\n  responseStream: false,\n  requestType: pkg_espressopb_espresso_pb.GetConfigurationRequest,\n  responseType: pkg_espressopb_espresso_pb.Configuration\n};\n\nEspresso.SetConfiguration = {\n  methodName: \"SetConfiguration\",\n  service: Espresso,\n  requestStream: false,\n  responseStream: false,\n  requestType: pkg_espressopb_espresso_pb.Configuration,\n  responseType: pkg_espressopb_espresso_pb.Configuration\n};\n\nexports.Espresso = Espresso;\n\nfunction EspressoClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nEspressoClient.prototype.boilerTemperature = function boilerTemperature(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(Espresso.BoilerTemperature, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nEspressoClient.prototype.getConfiguration = function getConfiguration(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Espresso.GetConfiguration, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nEspressoClient.prototype.setConfiguration = function setConfiguration(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Espresso.SetConfiguration, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.EspressoClient = EspressoClient;\n\n","import { makeStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: { paddingRight: theme.spacing(2) },\n  menuButton: { marginRight: theme.spacing(2) },\n  title: { flexGrow: 1 },\n}));\n\nexport default function AppHeader() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"absolute\">\n      <Toolbar className={classes.toolbar}>\n        <IconButton edge=\"start\" color=\"inherit\" className={classes.menuButton}>\n          <TimelineIcon fontSize=\"large\" />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          Espresso Controller\n        </Typography>\n        <IconButton href=\"https://github.com/gregorychen3/espresso-controller\" target=\"_blank\" color=\"inherit\">\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { grpc } from \"@improbable-eng/grpc-web\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as jspb from \"google-protobuf\";\nimport { toast } from \"react-toastify\";\nimport { RootState } from \"./redux\";\n\nexport const createUnaryGrpcThunk = <TReq extends jspb.Message, TResp extends jspb.Message>(\n  method: grpc.UnaryMethodDefinition<TReq, TResp>\n) => {\n  const { methodName } = method;\n  interface Payload {\n    request: TReq;\n  }\n\n  return createAsyncThunk<TResp, Payload, { state: RootState }>(\n    methodName,\n    async ({ request }: Payload) =>\n      new Promise<TResp>((resolve, reject) => {\n        grpc.invoke<TReq, TResp, typeof method>(method, {\n          host: \"\",\n          request,\n          onEnd: (code: grpc.Code, message: string, trailers: grpc.Metadata) => {\n            if (code !== grpc.Code.OK) {\n              toast.error(`Error: ${methodName}: ${message}`);\n              reject({ message, code, metadata: trailers });\n            }\n          },\n          onMessage: (resp: TResp) => {\n            resolve(resp.clone()); // clone msg on arrival to ensure all fields are set, avoiding unintended msg mutation later\n          },\n        });\n      })\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { RootState } from \".\";\nimport { createUnaryGrpcThunk } from \"../createUnaryGrpcThunk\";\nimport { Espresso } from \"../proto/pkg/espressopb/espresso_pb_service\";\n\n//\n// THUNKS\n// ------\n\nexport const getConfiguration = createUnaryGrpcThunk(Espresso.GetConfiguration);\nexport const setConfiguration = createUnaryGrpcThunk(Espresso.SetConfiguration);\n\n//\n// SLICE\n// -----\n\ninterface ConfigurationSlice {\n  configuration?: {\n    targetTemp: { value: number; setAt: Date };\n    p: number;\n    i: number;\n    d: number;\n  };\n  isFetching: boolean;\n}\n\nconst initialState: ConfigurationSlice = {\n  isFetching: false,\n};\n\nconst configurationSlice = createSlice({\n  name: \"configuration\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // GetConfiguration\n    builder.addCase(getConfiguration.pending, (state) => {\n      state.isFetching = true;\n    });\n    builder.addCase(getConfiguration.rejected, (state) => {\n      state.isFetching = false;\n    });\n    builder.addCase(getConfiguration.fulfilled, (state, action) => {\n      state.isFetching = false;\n      const value = action.payload.getTemperature();\n      const setAt = action.payload.getSetAt()?.toDate();\n      if (!setAt) {\n        console.warn(\"Target temperature response missing setAt time\");\n        return;\n      }\n      state.configuration = {\n        targetTemp: { value, setAt },\n        p: action.payload.getP(),\n        i: action.payload.getI(),\n        d: action.payload.getD(),\n      };\n    });\n\n    // SetConfiguration\n    builder.addCase(setConfiguration.pending, (state) => {\n      state.isFetching = true;\n    });\n    builder.addCase(setConfiguration.rejected, (state) => {\n      state.isFetching = false;\n    });\n    builder.addCase(setConfiguration.fulfilled, (state, action) => {\n      state.isFetching = false;\n      const value = action.payload.getTemperature();\n      const setAt = action.payload.getSetAt()?.toDate();\n      if (!setAt) {\n        console.warn(\"Target temperature response missing setAt time\");\n        return;\n      }\n      state.configuration = {\n        targetTemp: { value, setAt },\n        p: action.payload.getP(),\n        i: action.payload.getI(),\n        d: action.payload.getD(),\n      };\n      toast.success(\"PID successfully configured\");\n    });\n  },\n});\n\nexport default configurationSlice.reducer;\n\n//\n// SELECTORS\n// ---------\n\nexport const selectConfiguration = (state: RootState) => state.configuration.configuration;\nexport const selectFetchingTargetTemp = (state: RootState) => state.configuration.isFetching;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { setConfiguration } from \"./configurationSlice\";\n\nexport const uiSlice = createSlice({\n  name: \"ui\",\n  initialState: { configureDialogVisibility: false },\n  reducers: {\n    setConfigureDialogVisibility: (state, action: PayloadAction<boolean>) => {\n      state.configureDialogVisibility = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(setConfiguration.fulfilled, (state) => {\n      state.configureDialogVisibility = false;\n    });\n  },\n});\n\nexport const { setConfigureDialogVisibility } = uiSlice.actions;\n","import { Grid, InputAdornment } from \"@material-ui/core\";\nimport { Field, FieldAttributes, Form, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Configuration } from \"../proto/pkg/espressopb/espresso_pb\";\nimport { selectConfiguration, setConfiguration } from \"../redux/configurationSlice\";\n\nconst NumberField = (props: FieldAttributes<any>) => (\n  <Field component={TextField} margin=\"dense\" type=\"number\" fullWidth {...props} />\n);\n\nconst validationSchema = Yup.object().shape({\n  targetTemp: Yup.number()\n    .min(0, \"Must be in range [0, 140] °C\")\n    .max(140, \"Must be in range [0, 140] °C\")\n    .required(\"Required\"),\n  p: Yup.number().min(0, \"Must be > 0\").required(\"Required\"),\n  i: Yup.number().min(0, \"Must be > 0\").required(\"Required\"),\n  d: Yup.number().min(0, \"Must be > 0\").required(\"Required\"),\n});\n\ninterface Values {\n  targetTemp: number | \"\";\n  p: number | \"\";\n  i: number | \"\";\n  d: number | \"\";\n}\n\nexport default function ConfigurationForm() {\n  const d = useDispatch();\n  const configuration = useSelector(selectConfiguration);\n  const initialValues: Values = configuration\n    ? { targetTemp: configuration.targetTemp.value, p: configuration.p, i: configuration.i, d: configuration.d }\n    : { targetTemp: \"\", p: \"\", i: \"\", d: \"\" };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        const req = new Configuration();\n        req.setTemperature(values.targetTemp as number);\n        req.setP(values.p as number);\n        req.setI(values.i as number);\n        req.setD(values.d as number);\n        d(setConfiguration({ request: req }));\n        setSubmitting(false);\n      }}\n    >\n      <Form id=\"configuration\">\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <NumberField\n              name=\"targetTemp\"\n              label=\"Temperature\"\n              InputProps={{ endAdornment: <InputAdornment position=\"end\">°C</InputAdornment> }}\n            />\n          </Grid>\n          <Grid item xs={8} />\n          <Grid item xs={4}>\n            <NumberField name=\"p\" label=\"Proportional Term\" />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberField name=\"i\" label=\"Integral Term\" />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberField name=\"d\" label=\"Derivative Term\" />\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setConfigureDialogVisibility } from \"../redux/uiSlice\";\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  info: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nexport default function ConfigurationDialog() {\n  const d = useDispatch();\n  const classes = useStyles();\n\n  const handleClose = () => d(setConfigureDialogVisibility(false));\n\n  return (\n    <Dialog open={true} onClose={handleClose}>\n      <DialogTitle>\n        Configure PID Parameters\n        <IconButton\n          href=\"https://en.wikipedia.org/wiki/PID_controller\"\n          target=\"_blank\"\n          size=\"small\"\n          className={classes.info}\n        >\n          <InfoIcon fontSize=\"small\" />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <ConfigurationForm />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button type=\"submit\" form=\"configuration\" color=\"primary\">\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function Title({ children }: Props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"textSecondary\" gutterBottom>\n      {children}\n    </Typography>\n  );\n}\n","import Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport Title from \"./Title\";\nimport format from \"date-fns/format\";\n\nimport { makeStyles, Box } from \"@material-ui/core\";\n\nexport type Severity = \"normal\" | \"success\" | \"warning\" | \"error\";\n\nconst severityColorMap = {\n  normal: \"primary.main\",\n  success: \"success.main\",\n  warning: \"warning.main\",\n  error: \"error.main\",\n};\n\nconst useStyles = makeStyles({\n  context: { flex: 1 },\n});\n\nconst dateFormat = \"HH:mm:ss\";\n\ninterface Props {\n  name: string;\n  value: string | number;\n  unitLabel: string;\n  asOf?: Date;\n  severity: Severity;\n}\nexport default function MetricCard({ name, value, unitLabel, asOf, severity }: Props) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Title>{name}</Title>\n      <Typography variant=\"h4\">\n        <Box color={severityColorMap[severity]}>\n          {value} {unitLabel}\n        </Box>\n      </Typography>\n      {asOf && (\n        <Typography color=\"textSecondary\" className={classes.context}>\n          as of {format(asOf, dateFormat)}\n        </Typography>\n      )}\n    </>\n  );\n}\n","import { createSlice, Dispatch, PayloadAction } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { RootState } from \".\";\nimport { TemperatureStreamRequest, TemperatureStreamResponse } from \"../proto/pkg/espressopb/espresso_pb\";\nimport { EspressoClient } from \"../proto/pkg/espressopb/espresso_pb_service\";\nimport { TemperatureSample } from \"../types\";\n\ntype ReturnType<T extends (...args: any[]) => any> = T extends (...args: any[]) => infer R ? R : never;\n\nconst espressoClient = new EspressoClient(\"\");\n\nconst maxNumSamples = 900; // 15 minutes of history at a rate of 1 sample/sec\n\n//\n// SLICE\n// -----\n\ninterface BoilerTemperatureSlice {\n  stream?: ReturnType<typeof espressoClient.boilerTemperature>;\n  history: TemperatureSample[];\n}\n\nconst initialState: BoilerTemperatureSlice = {\n  stream: undefined,\n  history: [],\n};\n\nconst boilerTemperatureSlice = createSlice({\n  name: \"boilerTemperature\",\n  initialState,\n  reducers: {\n    // BoilerTemperature server streaming rpc\n    startBoilerTemperatureStream: (\n      state,\n      action: PayloadAction<ReturnType<typeof espressoClient.boilerTemperature>>\n    ) => {\n      state.stream = action.payload;\n    },\n    receiveBoilerTemperatureStreamMsg: (state, action: PayloadAction<TemperatureStreamResponse>) => {\n      const msg = action.payload;\n      switch (msg.getDataCase()) {\n        case TemperatureStreamResponse.DataCase.HISTORY:\n          const history = msg.getHistory();\n          if (!history) {\n            throw new Error(\"Failed to process boiler temperature stream message data\");\n          }\n\n          state.history = history\n            .getSamplesList()\n            .reduce((acc: TemperatureSample[], curSample) => {\n              const observedAt = curSample.getObservedAt();\n              return observedAt\n                ? [\n                    ...acc,\n                    {\n                      value: curSample.getValue(),\n                      observedAt: observedAt.toDate(),\n                    },\n                  ]\n                : acc;\n            }, [])\n            .filter((s) => s !== null);\n          break;\n        case TemperatureStreamResponse.DataCase.SAMPLE:\n          const sample = msg.getSample();\n          if (!sample) {\n            throw new Error(\"Failed to process boiler temperature stream message data\");\n          }\n\n          const observedAt = sample.getObservedAt();\n          if (!observedAt) {\n            throw new Error(\"Failed to process boiler temperature stream message data\");\n          }\n\n          state.history = state.history.slice(-(maxNumSamples - 1));\n          state.history.push({\n            value: sample.getValue(),\n            observedAt: observedAt.toDate(),\n          });\n          break;\n        default:\n          throw new Error(\"Failed to process boiler temperature stream message data\");\n      }\n    },\n    endBoilerTemperatureStream: (state) => {\n      state.stream?.cancel();\n      state.stream = undefined;\n    },\n  },\n});\n\nexport default boilerTemperatureSlice.reducer;\n\nexport const startBoilerTemperatureStream = (req: TemperatureStreamRequest) => (d: Dispatch) => {\n  const stream = espressoClient.boilerTemperature(req);\n  d(boilerTemperatureSlice.actions.startBoilerTemperatureStream(stream));\n\n  stream.on(\"data\", (msg) => {\n    try {\n      d(boilerTemperatureSlice.actions.receiveBoilerTemperatureStreamMsg(msg));\n    } catch (e) {\n      toast.error(`Error: ${e.message}`);\n    }\n  });\n  stream.on(\"end\", (status) => {\n    toast.error(`Error: boiler temperature stream ended: ${status?.details}`);\n  });\n};\n\nexport const { endBoilerTemperatureStream } = boilerTemperatureSlice.actions;\n\n//\n// SELECTORS\n// ---------\n\nexport const selectCurTemp = (state: RootState) =>\n  state.boilerTemperature.history[state.boilerTemperature.history.length - 1];\nexport const selectTempHistory = (state: RootState) => state.boilerTemperature.history;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport format from \"date-fns/format\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCurTemp } from \"../redux/boilerTemperatureSlice\";\nimport { selectConfiguration } from \"../redux/configurationSlice\";\nimport { setConfigureDialogVisibility } from \"../redux/uiSlice\";\nimport Title from \"./Title\";\n\nconst dateFormat = \"HH:mm:ss\";\n\nconst useStyles = makeStyles({\n  temperatureContext: {\n    flex: 1,\n  },\n  setTargetTempButton: { textAlign: \"center\" },\n});\n\nexport default function TemperatureCard() {\n  const d = useDispatch();\n  const classes = useStyles();\n\n  const curTemp = useSelector(selectCurTemp);\n  const configuration = useSelector(selectConfiguration);\n\n  const handleConfigureClicked = () => d(setConfigureDialogVisibility(true));\n\n  return (\n    <>\n      <Title>Temperature</Title>\n      <Typography variant=\"h4\" color=\"primary\">\n        {curTemp?.value.toFixed(2) ?? \"--\"} °C\n      </Typography>\n      {curTemp && (\n        <Typography color=\"textSecondary\" className={classes.temperatureContext}>\n          as of {format(curTemp.observedAt, dateFormat)}\n        </Typography>\n      )}\n      <Title>Target Temperature</Title>\n      <Typography variant=\"h4\" color=\"primary\">\n        {configuration?.targetTemp.value} °C\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.temperatureContext}>\n        set at {configuration?.targetTemp.setAt && format(configuration?.targetTemp.setAt, dateFormat)}\n      </Typography>\n      <div>\n        <div className={classes.setTargetTempButton}>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleConfigureClicked}>\n            CONFIGURE PID\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useTheme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Label, Line, LineChart, ReferenceLine, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { selectTempHistory } from \"../redux/boilerTemperatureSlice\";\nimport { selectConfiguration } from \"../redux/configurationSlice\";\nimport format from \"date-fns/format\";\n\nconst dateFormat = \"HH:mm\";\n\nexport default function TemperatureChart() {\n  const theme = useTheme();\n\n  const samples = useSelector(selectTempHistory);\n  const data = samples.map((s) => ({\n    time: format(s.observedAt, dateFormat),\n    temp: s.value,\n  }));\n\n  const targetTemp = useSelector(selectConfiguration)?.targetTemp;\n\n  return (\n    <ResponsiveContainer>\n      <LineChart data={data} margin={{ top: 16, right: 16, bottom: 0, left: 24 }}>\n        <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n        <YAxis domain={[\"dataMin - 5\", \"dataMax + 5\"]} stroke={theme.palette.text.secondary}>\n          <Label angle={270} position=\"left\" style={{ textAnchor: \"middle\", fill: theme.palette.text.primary }}>\n            Temperature (°C)\n          </Label>\n        </YAxis>\n        <Line\n          isAnimationActive={false}\n          type=\"monotone\"\n          dataKey=\"temp\"\n          stroke={theme.palette.primary.main}\n          dot={false}\n        />\n        <Tooltip />\n        {targetTemp && (\n          <ReferenceLine y={targetTemp.value} stroke=\"green\" strokeDasharray=\"3 3\" ifOverflow=\"extendDomain\" />\n        )}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import { RootState } from \".\";\n\nexport const showConfigDialog = (state: RootState) => state.ui.configureDialogVisibility;\n","import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport parsePromText, { Metric } from \"parse-prometheus-text-format\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ConfigurationDialog from \"../components/ConfigurationDialog\";\nimport MetricCard, { Severity } from \"../components/MetricCard\";\nimport TemperatureCard from \"../components/TemperatureCard\";\nimport TemperatureChart from \"../components/TemperatureChart\";\nimport { GetConfigurationRequest, TemperatureStreamRequest } from \"../proto/pkg/espressopb/espresso_pb\";\nimport { showConfigDialog } from \"../redux/selectors\";\nimport { endBoilerTemperatureStream, startBoilerTemperatureStream } from \"../redux/boilerTemperatureSlice\";\nimport { getConfiguration } from \"../redux/configurationSlice\";\n\nconst metricsRefreshIntervalMillis = 8000;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  tallPaper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: 500,\n  },\n}));\n\nexport default () => {\n  const showSetTemperatureModal = useSelector(showConfigDialog);\n\n  const classes = useStyles();\n\n  const d = useDispatch();\n\n  //\n  // Boiler temperature\n  // ------------------\n  useEffect(() => {\n    d(startBoilerTemperatureStream(new TemperatureStreamRequest()));\n    return () => {\n      d(endBoilerTemperatureStream());\n    };\n  }, [d]);\n\n  //\n  // System metrics\n  // --------------\n  const [metricsRefreshedAt, setMetricsRefreshedAt] = useState<Date | undefined>();\n  const [cpuUtilization, setCpuUtilization] = useState<number | undefined>();\n  const [memUtilization, setMemUtilization] = useState<number | undefined>();\n  const [cpuTemperature, setCpuTemperature] = useState<number | undefined>();\n  const [gpuTemperature, setGpuTemperature] = useState<number | undefined>();\n  const refreshMetrics = async () => {\n    const metricsResp = await fetch(\"/metrics\");\n    const metricsRaw = await metricsResp.text();\n    const metricsMap: { [key: string]: Metric } = parsePromText(metricsRaw).reduce((acc, cur) => {\n      return { ...acc, [cur.name]: cur };\n    }, {});\n\n    setMetricsRefreshedAt(new Date());\n    setCpuUtilization(100 * parseFloat(metricsMap.espresso_raspi_cpu_utilization_ratio.metrics[0].value));\n    setMemUtilization(100 * parseFloat(metricsMap.espresso_raspi_mem_utilization_ratio.metrics[0].value));\n    setCpuTemperature(parseFloat(metricsMap.espresso_raspi_cpu_temperature.metrics[0].value));\n    setGpuTemperature(parseFloat(metricsMap.espresso_raspi_gpu_temperature.metrics[0].value));\n  };\n  useEffect(() => {\n    refreshMetrics();\n    const interval = setInterval(refreshMetrics, metricsRefreshIntervalMillis);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    d(getConfiguration({ request: new GetConfigurationRequest() }));\n  }, [d]);\n\n  const getRaspiTemperatureSeverity = (raspiTemperature: number): Severity => {\n    if (raspiTemperature < 80) {\n      return \"normal\";\n    } else if (80 <= raspiTemperature && raspiTemperature < 85) {\n      return \"warning\";\n    } else {\n      return \"error\";\n    }\n  };\n\n  return (\n    <>\n      {showSetTemperatureModal && <ConfigurationDialog />}\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={9} lg={9}>\n          <Paper className={classes.tallPaper}>\n            <TemperatureChart />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={3} lg={3}>\n          <Paper className={classes.tallPaper}>\n            <TemperatureCard />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={3} lg={3}>\n          <Paper className={classes.paper}>\n            <MetricCard\n              name=\"CPU Usage\"\n              value={cpuUtilization?.toFixed(2) ?? \"--\"}\n              unitLabel=\"%\"\n              asOf={metricsRefreshedAt}\n              severity={\"normal\"}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={3} lg={3}>\n          <Paper className={classes.paper}>\n            <MetricCard\n              name=\"Memory Usage\"\n              value={memUtilization?.toFixed(2) ?? \"--\"}\n              unitLabel=\"%\"\n              asOf={metricsRefreshedAt}\n              severity={\"normal\"}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={3} lg={3}>\n          <Paper className={classes.paper}>\n            <MetricCard\n              name=\"CPU Temperature\"\n              value={cpuTemperature?.toFixed(2) ?? \"--\"}\n              unitLabel=\"°C\"\n              asOf={metricsRefreshedAt}\n              severity={cpuTemperature ? getRaspiTemperatureSeverity(cpuTemperature) : \"normal\"}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={3} lg={3}>\n          <Paper className={classes.paper}>\n            <MetricCard\n              name=\"GPU Temperature\"\n              value={gpuTemperature?.toFixed(2) ?? \"--\"}\n              unitLabel=\"°C\"\n              asOf={metricsRefreshedAt}\n              severity={gpuTemperature ? getRaspiTemperatureSeverity(gpuTemperature) : \"normal\"}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","import { Theme } from \"@material-ui/core\";\n\nexport const primary = \"#009DDB\";\nexport const accent = \"#FFD373\";\nexport const accentDark = \"#F09000\";\nexport const darkGrayB = \"#171717\";\nexport const darkGrayC = \"#1E262E\";\nexport const red = \"#EC1600\";\nexport const warning = \"#EBA300\";\nexport const green = \"#00C78E\";\n\nexport const getThemedToastClass = (theme: Theme) => ({\n  \"&.Toastify__toast--info\": { backgroundColor: theme.palette.secondary.main },\n  \"&.Toastify__toast--success\": { backgroundColor: theme.palette.success.main },\n  \"&.Toastify__toast--warning\": { backgroundColor: theme.palette.warning.main },\n  \"&.Toastify__toast--error\": { backgroundColor: theme.palette.error.main },\n  \"&.Toastify__toast--default\": { backgroundColor: theme.palette.background.paper },\n});\n","import Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AppHeader from \"./components/AppHeader\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport { getThemedToastClass } from \"./theme\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { display: \"flex\" },\n  toast: getThemedToastClass(theme),\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppHeader />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <DashboardPage />\n        </Container>\n      </main>\n      <ToastContainer toastClassName={classes.toast} />\n    </div>\n  );\n}\n","import { createMuiTheme, ThemeProvider, useMediaQuery } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { accentDark, darkGrayB, darkGrayC, green, primary, red, warning } from \"../theme\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function ThemeWrapper({ children }: Props) {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          primary: { main: primary },\n          secondary: { main: accentDark },\n          error: { main: red },\n          warning: { main: warning },\n          success: { main: green },\n          background: prefersDarkMode ? { default: darkGrayB, paper: darkGrayC } : {},\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport boilerTemperatureReducer from \"./boilerTemperatureSlice\";\nimport configurationReducer from \"./configurationSlice\";\nimport { uiSlice } from \"./uiSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    boilerTemperature: boilerTemperatureReducer,\n    configuration: configurationReducer,\n    ui: uiSlice.reducer,\n  },\n  middleware: getDefaultMiddleware({\n    thunk: true,\n    immutableCheck: true,\n    serializableCheck: false,\n  }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport ThemeWrapper from \"./components/ThemeWrapper\";\nimport { store } from \"./redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeWrapper>\n        <App />\n      </ThemeWrapper>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n// source: pkg/espressopb/espresso.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.espressopb.Configuration', null, global);\ngoog.exportSymbol('proto.espressopb.GetConfigurationRequest', null, global);\ngoog.exportSymbol('proto.espressopb.TemperatureHistory', null, global);\ngoog.exportSymbol('proto.espressopb.TemperatureSample', null, global);\ngoog.exportSymbol('proto.espressopb.TemperatureStreamRequest', null, global);\ngoog.exportSymbol('proto.espressopb.TemperatureStreamResponse', null, global);\ngoog.exportSymbol('proto.espressopb.TemperatureStreamResponse.DataCase', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.espressopb.TemperatureSample = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.espressopb.TemperatureSample, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.espressopb.TemperatureSample.displayName = 'proto.espressopb.TemperatureSample';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.espressopb.TemperatureHistory = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.espressopb.TemperatureHistory.repeatedFields_, null);\n};\ngoog.inherits(proto.espressopb.TemperatureHistory, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.espressopb.TemperatureHistory.displayName = 'proto.espressopb.TemperatureHistory';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.espressopb.TemperatureStreamRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.espressopb.TemperatureStreamRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.espressopb.TemperatureStreamRequest.displayName = 'proto.espressopb.TemperatureStreamRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.espressopb.TemperatureStreamResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.espressopb.TemperatureStreamResponse.oneofGroups_);\n};\ngoog.inherits(proto.espressopb.TemperatureStreamResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.espressopb.TemperatureStreamResponse.displayName = 'proto.espressopb.TemperatureStreamResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.espressopb.GetConfigurationRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.espressopb.GetConfigurationRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.espressopb.GetConfigurationRequest.displayName = 'proto.espressopb.GetConfigurationRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.espressopb.Configuration = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.espressopb.Configuration, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.espressopb.Configuration.displayName = 'proto.espressopb.Configuration';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.espressopb.TemperatureSample.prototype.toObject = function(opt_includeInstance) {\n  return proto.espressopb.TemperatureSample.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.espressopb.TemperatureSample} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.TemperatureSample.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),\n    observedAt: (f = msg.getObservedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.espressopb.TemperatureSample}\n */\nproto.espressopb.TemperatureSample.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.espressopb.TemperatureSample;\n  return proto.espressopb.TemperatureSample.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.espressopb.TemperatureSample} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.espressopb.TemperatureSample}\n */\nproto.espressopb.TemperatureSample.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setValue(value);\n      break;\n    case 2:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setObservedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.espressopb.TemperatureSample.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.espressopb.TemperatureSample.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.espressopb.TemperatureSample} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.TemperatureSample.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      1,\n      f\n    );\n  }\n  f = message.getObservedAt();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional float value = 1;\n * @return {number}\n */\nproto.espressopb.TemperatureSample.prototype.getValue = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.espressopb.TemperatureSample} returns this\n */\nproto.espressopb.TemperatureSample.prototype.setValue = function(value) {\n  return jspb.Message.setProto3FloatField(this, 1, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp observed_at = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.espressopb.TemperatureSample.prototype.getObservedAt = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.espressopb.TemperatureSample} returns this\n*/\nproto.espressopb.TemperatureSample.prototype.setObservedAt = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.espressopb.TemperatureSample} returns this\n */\nproto.espressopb.TemperatureSample.prototype.clearObservedAt = function() {\n  return this.setObservedAt(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.espressopb.TemperatureSample.prototype.hasObservedAt = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.espressopb.TemperatureHistory.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.espressopb.TemperatureHistory.prototype.toObject = function(opt_includeInstance) {\n  return proto.espressopb.TemperatureHistory.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.espressopb.TemperatureHistory} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.TemperatureHistory.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    samplesList: jspb.Message.toObjectList(msg.getSamplesList(),\n    proto.espressopb.TemperatureSample.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.espressopb.TemperatureHistory}\n */\nproto.espressopb.TemperatureHistory.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.espressopb.TemperatureHistory;\n  return proto.espressopb.TemperatureHistory.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.espressopb.TemperatureHistory} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.espressopb.TemperatureHistory}\n */\nproto.espressopb.TemperatureHistory.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.espressopb.TemperatureSample;\n      reader.readMessage(value,proto.espressopb.TemperatureSample.deserializeBinaryFromReader);\n      msg.addSamples(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.espressopb.TemperatureHistory.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.espressopb.TemperatureHistory.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.espressopb.TemperatureHistory} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.TemperatureHistory.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSamplesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.espressopb.TemperatureSample.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated TemperatureSample samples = 1;\n * @return {!Array<!proto.espressopb.TemperatureSample>}\n */\nproto.espressopb.TemperatureHistory.prototype.getSamplesList = function() {\n  return /** @type{!Array<!proto.espressopb.TemperatureSample>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.espressopb.TemperatureSample, 1));\n};\n\n\n/**\n * @param {!Array<!proto.espressopb.TemperatureSample>} value\n * @return {!proto.espressopb.TemperatureHistory} returns this\n*/\nproto.espressopb.TemperatureHistory.prototype.setSamplesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.espressopb.TemperatureSample=} opt_value\n * @param {number=} opt_index\n * @return {!proto.espressopb.TemperatureSample}\n */\nproto.espressopb.TemperatureHistory.prototype.addSamples = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.espressopb.TemperatureSample, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.espressopb.TemperatureHistory} returns this\n */\nproto.espressopb.TemperatureHistory.prototype.clearSamplesList = function() {\n  return this.setSamplesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.espressopb.TemperatureStreamRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.espressopb.TemperatureStreamRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.espressopb.TemperatureStreamRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.TemperatureStreamRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.espressopb.TemperatureStreamRequest}\n */\nproto.espressopb.TemperatureStreamRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.espressopb.TemperatureStreamRequest;\n  return proto.espressopb.TemperatureStreamRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.espressopb.TemperatureStreamRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.espressopb.TemperatureStreamRequest}\n */\nproto.espressopb.TemperatureStreamRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.espressopb.TemperatureStreamRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.espressopb.TemperatureStreamRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.espressopb.TemperatureStreamRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.TemperatureStreamRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.espressopb.TemperatureStreamResponse.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.espressopb.TemperatureStreamResponse.DataCase = {\n  DATA_NOT_SET: 0,\n  HISTORY: 1,\n  SAMPLE: 2\n};\n\n/**\n * @return {proto.espressopb.TemperatureStreamResponse.DataCase}\n */\nproto.espressopb.TemperatureStreamResponse.prototype.getDataCase = function() {\n  return /** @type {proto.espressopb.TemperatureStreamResponse.DataCase} */(jspb.Message.computeOneofCase(this, proto.espressopb.TemperatureStreamResponse.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.espressopb.TemperatureStreamResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.espressopb.TemperatureStreamResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.espressopb.TemperatureStreamResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.TemperatureStreamResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    history: (f = msg.getHistory()) && proto.espressopb.TemperatureHistory.toObject(includeInstance, f),\n    sample: (f = msg.getSample()) && proto.espressopb.TemperatureSample.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.espressopb.TemperatureStreamResponse}\n */\nproto.espressopb.TemperatureStreamResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.espressopb.TemperatureStreamResponse;\n  return proto.espressopb.TemperatureStreamResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.espressopb.TemperatureStreamResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.espressopb.TemperatureStreamResponse}\n */\nproto.espressopb.TemperatureStreamResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.espressopb.TemperatureHistory;\n      reader.readMessage(value,proto.espressopb.TemperatureHistory.deserializeBinaryFromReader);\n      msg.setHistory(value);\n      break;\n    case 2:\n      var value = new proto.espressopb.TemperatureSample;\n      reader.readMessage(value,proto.espressopb.TemperatureSample.deserializeBinaryFromReader);\n      msg.setSample(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.espressopb.TemperatureStreamResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.espressopb.TemperatureStreamResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.espressopb.TemperatureStreamResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.TemperatureStreamResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHistory();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.espressopb.TemperatureHistory.serializeBinaryToWriter\n    );\n  }\n  f = message.getSample();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.espressopb.TemperatureSample.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional TemperatureHistory history = 1;\n * @return {?proto.espressopb.TemperatureHistory}\n */\nproto.espressopb.TemperatureStreamResponse.prototype.getHistory = function() {\n  return /** @type{?proto.espressopb.TemperatureHistory} */ (\n    jspb.Message.getWrapperField(this, proto.espressopb.TemperatureHistory, 1));\n};\n\n\n/**\n * @param {?proto.espressopb.TemperatureHistory|undefined} value\n * @return {!proto.espressopb.TemperatureStreamResponse} returns this\n*/\nproto.espressopb.TemperatureStreamResponse.prototype.setHistory = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.espressopb.TemperatureStreamResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.espressopb.TemperatureStreamResponse} returns this\n */\nproto.espressopb.TemperatureStreamResponse.prototype.clearHistory = function() {\n  return this.setHistory(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.espressopb.TemperatureStreamResponse.prototype.hasHistory = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional TemperatureSample sample = 2;\n * @return {?proto.espressopb.TemperatureSample}\n */\nproto.espressopb.TemperatureStreamResponse.prototype.getSample = function() {\n  return /** @type{?proto.espressopb.TemperatureSample} */ (\n    jspb.Message.getWrapperField(this, proto.espressopb.TemperatureSample, 2));\n};\n\n\n/**\n * @param {?proto.espressopb.TemperatureSample|undefined} value\n * @return {!proto.espressopb.TemperatureStreamResponse} returns this\n*/\nproto.espressopb.TemperatureStreamResponse.prototype.setSample = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.espressopb.TemperatureStreamResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.espressopb.TemperatureStreamResponse} returns this\n */\nproto.espressopb.TemperatureStreamResponse.prototype.clearSample = function() {\n  return this.setSample(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.espressopb.TemperatureStreamResponse.prototype.hasSample = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.espressopb.GetConfigurationRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.espressopb.GetConfigurationRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.espressopb.GetConfigurationRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.GetConfigurationRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.espressopb.GetConfigurationRequest}\n */\nproto.espressopb.GetConfigurationRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.espressopb.GetConfigurationRequest;\n  return proto.espressopb.GetConfigurationRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.espressopb.GetConfigurationRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.espressopb.GetConfigurationRequest}\n */\nproto.espressopb.GetConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.espressopb.GetConfigurationRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.espressopb.GetConfigurationRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.espressopb.GetConfigurationRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.GetConfigurationRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.espressopb.Configuration.prototype.toObject = function(opt_includeInstance) {\n  return proto.espressopb.Configuration.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.espressopb.Configuration} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.Configuration.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    temperature: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),\n    p: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),\n    i: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),\n    d: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),\n    setAt: (f = msg.getSetAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.espressopb.Configuration}\n */\nproto.espressopb.Configuration.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.espressopb.Configuration;\n  return proto.espressopb.Configuration.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.espressopb.Configuration} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.espressopb.Configuration}\n */\nproto.espressopb.Configuration.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setTemperature(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setP(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setI(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setD(value);\n      break;\n    case 5:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setSetAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.espressopb.Configuration.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.espressopb.Configuration.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.espressopb.Configuration} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.espressopb.Configuration.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTemperature();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      1,\n      f\n    );\n  }\n  f = message.getP();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n  f = message.getI();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      3,\n      f\n    );\n  }\n  f = message.getD();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      4,\n      f\n    );\n  }\n  f = message.getSetAt();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional float temperature = 1;\n * @return {number}\n */\nproto.espressopb.Configuration.prototype.getTemperature = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.espressopb.Configuration} returns this\n */\nproto.espressopb.Configuration.prototype.setTemperature = function(value) {\n  return jspb.Message.setProto3FloatField(this, 1, value);\n};\n\n\n/**\n * optional float p = 2;\n * @return {number}\n */\nproto.espressopb.Configuration.prototype.getP = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.espressopb.Configuration} returns this\n */\nproto.espressopb.Configuration.prototype.setP = function(value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n\n/**\n * optional float i = 3;\n * @return {number}\n */\nproto.espressopb.Configuration.prototype.getI = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.espressopb.Configuration} returns this\n */\nproto.espressopb.Configuration.prototype.setI = function(value) {\n  return jspb.Message.setProto3FloatField(this, 3, value);\n};\n\n\n/**\n * optional float d = 4;\n * @return {number}\n */\nproto.espressopb.Configuration.prototype.getD = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.espressopb.Configuration} returns this\n */\nproto.espressopb.Configuration.prototype.setD = function(value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp set_at = 5;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.espressopb.Configuration.prototype.getSetAt = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.espressopb.Configuration} returns this\n*/\nproto.espressopb.Configuration.prototype.setSetAt = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.espressopb.Configuration} returns this\n */\nproto.espressopb.Configuration.prototype.clearSetAt = function() {\n  return this.setSetAt(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.espressopb.Configuration.prototype.hasSetAt = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\ngoog.object.extend(exports, proto.espressopb);\n"],"sourceRoot":""}